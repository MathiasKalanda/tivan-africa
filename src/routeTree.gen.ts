/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProductPageImport } from './routes/productPage'
import { Route as ContactusImport } from './routes/contactus'
import { Route as AboutusImport } from './routes/aboutus'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsSlugImport } from './routes/products/$slug'

// Create/Update Routes

const ProductPageRoute = ProductPageImport.update({
  id: '/productPage',
  path: '/productPage',
  getParentRoute: () => rootRoute,
} as any)

const ContactusRoute = ContactusImport.update({
  id: '/contactus',
  path: '/contactus',
  getParentRoute: () => rootRoute,
} as any)

const AboutusRoute = AboutusImport.update({
  id: '/aboutus',
  path: '/aboutus',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsSlugRoute = ProductsSlugImport.update({
  id: '/products/$slug',
  path: '/products/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/aboutus': {
      id: '/aboutus'
      path: '/aboutus'
      fullPath: '/aboutus'
      preLoaderRoute: typeof AboutusImport
      parentRoute: typeof rootRoute
    }
    '/contactus': {
      id: '/contactus'
      path: '/contactus'
      fullPath: '/contactus'
      preLoaderRoute: typeof ContactusImport
      parentRoute: typeof rootRoute
    }
    '/productPage': {
      id: '/productPage'
      path: '/productPage'
      fullPath: '/productPage'
      preLoaderRoute: typeof ProductPageImport
      parentRoute: typeof rootRoute
    }
    '/products/$slug': {
      id: '/products/$slug'
      path: '/products/$slug'
      fullPath: '/products/$slug'
      preLoaderRoute: typeof ProductsSlugImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/aboutus': typeof AboutusRoute
  '/contactus': typeof ContactusRoute
  '/productPage': typeof ProductPageRoute
  '/products/$slug': typeof ProductsSlugRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/aboutus': typeof AboutusRoute
  '/contactus': typeof ContactusRoute
  '/productPage': typeof ProductPageRoute
  '/products/$slug': typeof ProductsSlugRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/aboutus': typeof AboutusRoute
  '/contactus': typeof ContactusRoute
  '/productPage': typeof ProductPageRoute
  '/products/$slug': typeof ProductsSlugRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/aboutus'
    | '/contactus'
    | '/productPage'
    | '/products/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/aboutus' | '/contactus' | '/productPage' | '/products/$slug'
  id:
    | '__root__'
    | '/'
    | '/aboutus'
    | '/contactus'
    | '/productPage'
    | '/products/$slug'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutusRoute: typeof AboutusRoute
  ContactusRoute: typeof ContactusRoute
  ProductPageRoute: typeof ProductPageRoute
  ProductsSlugRoute: typeof ProductsSlugRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutusRoute: AboutusRoute,
  ContactusRoute: ContactusRoute,
  ProductPageRoute: ProductPageRoute,
  ProductsSlugRoute: ProductsSlugRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/aboutus",
        "/contactus",
        "/productPage",
        "/products/$slug"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/aboutus": {
      "filePath": "aboutus.jsx"
    },
    "/contactus": {
      "filePath": "contactus.jsx"
    },
    "/productPage": {
      "filePath": "productPage.jsx"
    },
    "/products/$slug": {
      "filePath": "products/$slug.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
